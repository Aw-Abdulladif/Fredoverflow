<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fredoverflow</groupId>
    <artifactId>karel</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kotlin.version>1.5.32</kotlin.version>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <main.class>MainKt</main.class>
        <java.runtime>${java.home}/lib/rt.jar</java.runtime>
    </properties>

    <profiles>
        <profile>
            <id>java-modules</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <properties>
                <java.runtime>${java.home}/jmods(!**.jar;!module-info.class)</java.runtime>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>fredoverflow</groupId>
            <artifactId>freditor</artifactId>
            <version>0.1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>9.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeDependencyInjar>true</includeDependencyInjar>
                    <outFilter>META-INF/MANIFEST.MF,!META-INF/**,!**.kotlin_*</outFilter>
                    <outjar>${project.artifactId}.jar</outjar>
                    <options>
                        <!-- for some reason, the usual approach via configuration/libs/lib does not work -->
                        <option>-libraryjars ${java.runtime}</option>
                        <!-- preserve entry point, otherwise output jar would be empty -->
                        <option>-keep public class ${main.class} { public static void main(java.lang.String[]); }</option>
                        <!-- preserve classes related to dynamic code generation -->
                        <option>-keep public class vm.Karel { *; }</option>
                        <option>-keep public class vm.Karel$Callbacks { *; }</option>
                        <option>-keep public class Karel_0 { *; }</option>
                        <!-- remove compiler-generated null checks for unneeded Java->Kotlin interoperability -->
                        <option>-assumenosideeffects class kotlin.jvm.internal.Intrinsics { static void checkParameterIsNotNull(java.lang.Object, java.lang.String); }</option>
                        <!-- hide annoying but harmless reflection warnings -->
                        <option>-dontnote kotlin.**</option>
                    </options>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
